plugins {
    id 'com.gradleup.shadow' version '8.3.0'
    id 'java'
    id 'xyz.jpenilla.run-paper' version '2.3.1'
}

base {
    archivesName = "MagicalCampfires-paper"
}


repositories {
    mavenCentral()
    maven { url 'https://repo.papermc.io/repository/maven-public/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://repo.aikar.co/content/groups/aikar/' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.tcoded.com/releases' }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:${paperapi}")
    implementation("co.aikar:acf-paper:${acf}")
    implementation("com.tcoded:FoliaLib:${folialib}")
}

shadowJar {
    archiveBaseName.set("MagicalCampfires-paper")
    archiveClassifier.set("")
    archiveVersion.set(version)

    relocate 'co.aikar.commands', 'org.notionsmp.libs.acf'
    relocate 'co.aikar.locales', 'org.notionsmp.libs.locales'
    relocate 'com.tcoded.folialib', 'org.notionsmp.libs.folialib'

    exclude 'META-INF/**'
}


jar.enabled = false

tasks.build.dependsOn tasks.shadowJar

tasks {
    runServer {
        minecraftVersion('1.19.4')
    }
}

def targetJavaVersion = 21

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
